ks.test(x = tuno1_delta2, "pnorm", mean(tuno1_delta2), sd(tuno1_delta2))
ks.test(x = tuno1_delta2$delta_2, "pnorm",
mean(tuno1_delta2$delta_2), sd(tuno1_delta2$delta_2))
# test turno 2
tuno2_delta2 <- data %>% filter(turno == 'T2') %>% select(delta_2)
ks.test(x = tuno2_delta2$delta_2, "pnorm",
mean(tuno2_delta2$delta_2), sd(tuno2_delta2$delta_2))
# test turno 1
tuno3_delta2 <- data %>% filter(turno == 'T3') %>% select(delta_2)
ks.test(x = tuno3_delta2$delta_2, "pnorm",
mean(tuno3_delta2$delta_2), sd(tuno3_delta2$delta_2))
ks.test(x = tuno3_delta2$delta_2, "pnorm",
mean(tuno3_delta2$delta_2), sd(tuno3_delta2$delta_2))
# turno 1 y 2
wilcox.test(x = tuno1_delta2$delta_2, y = tuno2_delta2$delta_2,
alternative = "two.sided", mu = 0, paired = F,
conf.int = 0.95)
# turno 1 y 3
wilcox.test(x = tuno1_delta2$delta_2, y = tuno3_delta2$delta_2,
alternative = "two.sided", mu = 0, paired = F,
conf.int = 0.95)
# turno 2 y 3
wilcox.test(x = tuno2_delta2$delta_2, y = tuno3_delta2$delta_2,
alternative = "two.sided", mu = 0, paired = F,
conf.int = 0.95)
# turno 1 y 2
wilcox.test(x = tuno1_delta2$delta_2, y = tuno2_delta2$delta_2,
alternative = "two.sided", mu = 0, paired = F,
conf.int = 0.95)
# turno 1 y 3
wilcox.test(x = tuno1_delta2$delta_2, y = tuno3_delta2$delta_2,
alternative = "two.sided", mu = 0, paired = F,
conf.int = 0.95)
# turno 2 y 3
wilcox.test(x = tuno2_delta2$delta_2, y = tuno3_delta2$delta_2,
alternative = "two.sided", mu = 0, paired = F,
conf.int = 0.95)
table(data$turno, data$tipo_carga)
prop.table(data$turno, data$tipo_carga)
tbl <- table(data$turno, data$tipo_carga)
prop.table(tbl)
mosaicplot(tbl,main="observada",las=2)
mosaicplot(tbl,main="observada")
mosaicplot(tbl,main="observada",las=2, col = data$tipo_carga)
mosaicplot(tbl,main="observada",las=2, col = data$turno)
mosaicplot(tbl,main="observada",las=2)
chisq.test(x = tabla)
chisq.test(x = tbl)
?chisq.test
table(data$tipo_carga, data$delta_1)
# Alimento no perecible
categ_alimentos_delta <- data %>%
filter(tipo_carga == 'Alimentos no perecibles') %>%
select(delta_2, delta_3, delta_4)
# Bienes de lujo
categ_lujos_delta <- data %>%
filter(tipo_carga == 'Bienes de lujo') %>%
select(delta_2, delta_3, delta_4)
# Medicamentos
categ_medic_delta <- data %>%
filter(tipo_carga == 'Medicamentos') %>%
select(delta_2, delta_3, delta_4)
# Textil
categ_textil_delta <- data %>%
filter(tipo_carga == 'Textil') %>%
select(delta_2, delta_3, delta_4)
# Texto
categ_texto_delta <- data %>%
filter(tipo_carga == 'Texto') %>%
select(delta_2, delta_3, delta_4)
mean(categ_alimentos_delta)
mean(categ_alimentos_delta$delta_2)
# delta 2
mean(categ_alimentos_delta$delta_2)
# delta 3
mean(categ_alimentos_delta$delta_3)
# delta 4
mean(categ_alimentos_delta$delta_4)
# delta 2
mean(categ_lujos_delta$delta_2)
# delta 2
mean(categ_lujos_delta$delta_2)
# delta 3
mean(categ_lujos_delta$delta_3)
# delta 4
mean(categ_lujos_delta$delta_4)
# delta 2
mean(categ_medic_delta$delta_2)
# delta 2
mean(categ_medic_delta$delta_2)
# delta 3
mean(categ_medic_delta$delta_3)
# delta 4
mean(categ_medic_delta$delta_4)
# delta 2
mean(categ_textil_delta$delta_2)
# delta 3
mean(categ_textil_delta$delta_3)
# delta 4
mean(categ_textil_delta$delta_4)
# delta 2
mean(categ_texto_delta$delta_2)
# delta 2
mean(categ_texto_delta$delta_2)
#### Texto
categ_texto_delta <- data %>%
filter(tipo_carga == 'Textos') %>%
select(delta_2, delta_3, delta_4)
# delta 2
mean(categ_texto_delta$delta_2)
# delta 3
mean(categ_texto_delta$delta_3)
# delta 4
mean(categ_texto_delta$delta_4)
#### Texto
categ_texto_delta <- data %>%
filter(tipo_carga == 'Textos') %>%
select(delta_2, delta_3, delta_4)
#### Texto
categ_texto_delta <- data %>%
filter(tipo_carga == 'Textos ') %>%
select(delta_2, delta_3, delta_4)
# delta 2
mean(categ_texto_delta$delta_2)
# delta 3
mean(categ_texto_delta$delta_3)
# delta 4
mean(categ_texto_delta$delta_4)
# delta 2
median(categ_texto_delta$delta_2)
# delta 3
median(categ_texto_delta$delta_3)
# delta 4
median(categ_texto_delta$delta_4)
# delta 2
median(categ_textil_delta$delta_2)
# delta 3
median(categ_textil_delta$delta_3)
# delta 4
median(categ_textil_delta$delta_4)
# delta 2
median(categ_textil_delta$delta_2)
# delta 3
median(categ_textil_delta$delta_3)
# delta 4
median(categ_textil_delta$delta_4)
# delta 2
median(categ_medic_delta$delta_2)
# delta 3
median(categ_medic_delta$delta_3)
# delta 4
median(categ_medic_delta$delta_4)
# delta 2
median(categ_lujos_delta$delta_2)
# delta 3
median(categ_lujos_delta$delta_3)
# delta 4
median(categ_lujos_delta$delta_4)
# delta 2
median(categ_alimentos_delta$delta_2)
# delta 3
median(categ_alimentos_delta$delta_3)
# delta 4
median(categ_alimentos_delta$delta_4)
wilcox.test(x = categ_alimentos_delta$delta_2, y = categ_medic_delta$delta_2,
alternative = "two.sided", mu = 0, paired = F,
conf.int = 0.95)
wilcox.test(x = categ_alimentos_delta$delta_2, y = categ_texto_delta$delta_2,
alternative = "two.sided", mu = 0, paired = F,
conf.int = 0.95)
wilcox.test(x = categ_medic_delta$delta_2, y = categ_texto_delta$delta_2,
alternative = "two.sided", mu = 0, paired = F,
conf.int = 0.95)
#### Test Wilcoxon --- Delta 3
wilcox.test(x = categ_alimentos_delta$delta_3, y = categ_medic_delta$delta_3,
alternative = "two.sided", mu = 0, paired = F,
conf.int = 0.95)
wilcox.test(x = categ_alimentos_delta$delta_3, y = categ_texto_delta$delta_3,
alternative = "two.sided", mu = 0, paired = F,
conf.int = 0.95)
wilcox.test(x = categ_medic_delta$delta_3, y = categ_texto_delta$delta_3,
alternative = "two.sided", mu = 0, paired = F,
conf.int = 0.95)
#### Test Wilcoxon --- Delta 4
wilcox.test(x = categ_alimentos_delta$delta_4, y = categ_medic_delta$delta_4,
alternative = "two.sided", mu = 0, paired = F,
conf.int = 0.95)
wilcox.test(x = categ_alimentos_delta$delta_4, y = categ_texto_delta$delta_4,
alternative = "two.sided", mu = 0, paired = F,
conf.int = 0.95)
wilcox.test(x = categ_medic_delta$delta_4, y = categ_texto_delta$delta_4,
alternative = "two.sided", mu = 0, paired = F,
conf.int = 0.95)
corrplot(deltas_fact, method = "ellipse")
################
## PREGUNTA 6 ##
################
library(corrplot)
install.packages("corrplot")
library(corrplot)
corrplot(deltas_fact, method = "ellipse")
corrplot(delta, method = "ellipse")
corrplot(deltas, method = "ellipse")
M <- cor(deltas)
corrplot(M, method = "ellipse")
# grafico de correlacion de spearman
M <- cor(deltas, method="spearman")
corrplot(M, method = "ellipse", method = "circle")
corrplot(M, method = "ellipse", method = "upper")
corrplot(M, method = "ellipse", type = "circle")
corrplot(M, method = "ellipse", type = "full")
corrplot(M, method = "ellipse", type = "upper")
corrplot(M, method = "ellipse", type = "full")
corrplot(M, method = "circle", type = "full")
corrplot(M, method = "ellipse", type = "full")
# grafico de correlacion de spearman
M <- cor(deltas[c(2,3,4)], method="spearman")
corrplot(M, method = "ellipse", type = "full")
# Coeficiente de correlaciÃ³n de Spearman
cor.test(deltas$delta_2, dat2$delta_3, method = "spearman")
# Coeficiente de correlaciÃ³n de Spearman
cor.test(deltas$delta_2, deltas$delta_3, method = "spearman")
cor.test(deltas$delta_2, deltas$delta_4, method = "spearman")
cor.test(deltas$delta_3, deltas$delta_4, method = "spearman")
View(deltas_fact)
# outliers
boxplot(deltas$delta_1, plot=FALSE)$out
original <- read.csv2("Base_T1_modif.csv")
original <- read.csv2("Base_T1_modif.csv")
data <- original %>%
select(
tiempo_1 = delta_1,
tiempo_2 = delta_2,
responsable = Responsable,
tipo_carga = Tipo_carga,
tiempo_3 = delta_3,
responsable_O1 = Responsable_O1,
tiempo_4 = delta_4,
responsable_O2 = Responsable_O2,
tiempo_5 = delta_5
)
data <- original %>%
select(
tiempo_1 = delta_1,
tiempo_2 = delta_2,
responsable = Responsable,
tipo_carga = Tipo_carga,
tiempo_3 = delta_3,
responsable_O1 = Responsable_O1,
tiempo_4 = delta_4,
responsable_O2 = Responsable_O2,
tiempo_5 = delta_5
)
library(tidyverse)
library(reshape2)
library(corrplot)
data <- original %>%
select(
tiempo_1 = delta_1,
tiempo_2 = delta_2,
responsable = Responsable,
tipo_carga = Tipo_carga,
tiempo_3 = delta_3,
responsable_O1 = Responsable_O1,
tiempo_4 = delta_4,
responsable_O2 = Responsable_O2,
tiempo_5 = delta_5
)
View(data)
# SE CONVIERTEN LOS tiempos EN NUMERICOS
data <- data %>% mutate(
tiempo_1 = as.numeric(tiempo_1),
tiempo_2 = as.numeric(tiempo_2),
tiempo_3 = as.numeric(tiempo_3),
tiempo_4 = as.numeric(tiempo_4),
tiempo_5 = as.numeric(tiempo_5),
tipo_carga = as.factor(tipo_carga),
responsable = as.factor(responsable),
responsable_O1 = as.factor(responsable_O1),
responsable_O2 = as.factor(responsable_O2),
)
View(data)
original <- read.csv2("Base_T1_Modif.csv")
data <- original %>%
select(
id = Id_Atenci.n,
fecha = Fecha,
turno = Turno,
delta_1 = deltaMinuto1,
respon_2 = Responsable,
tipo_carga = Tipo_carga,
delta_2 = deltafecha2,
delta_3 = SUMA_ATENCION_O1_delta_3,
respon_3 = Responsable_O1,
delta_4 = Min_Atenci.n_O2_delta_4,
respon_4 = Responsable_O2,
delta_5 = Min_port_salida_delta_5
)
original <- read.csv2("Base_T1_modif.csv")
data <- original %>%
select(
tiempo_1 = delta_1,
tiempo_2 = delta_2,
responsable = Responsable,
tipo_carga = Tipo_carga,
tiempo_3 = delta_3,
responsable_O1 = Responsable_O1,
tiempo_4 = delta_4,
responsable_O2 = Responsable_O2,
tiempo_5 = delta_5
)
View(data)
# SE CONVIERTEN LOS tiempos EN NUMERICOS
data <- data %>% mutate(
tiempo_1 = as.numeric(tiempo_1),
tiempo_2 = as.numeric(tiempo_2),
tiempo_3 = as.numeric(tiempo_3),
tiempo_4 = as.numeric(tiempo_4),
tiempo_5 = as.numeric(tiempo_5),
tipo_carga = as.factor(tipo_carga),
responsable = as.factor(responsable),
responsable_O1 = as.factor(responsable_O1),
responsable_O2 = as.factor(responsable_O2),
)
#### BOXPLOT tiempoS
ggplot(data = tiempos_fact,
mapping = aes(variable, value, colour = variable)) +
geom_boxplot(outlier.shape=NA, size = 1) +
theme_minimal() +
theme(legend.position = "none") +
xlab("tiempos") + ylab("Minutos") +
ylim(0,84)
tiempos <- data %>% select(tiempo_1, tiempo_2, tiempo_3, tiempo_4, tiempo_5)
# ?melt
tiempos_fact <- melt(tiempos)
#### BOXPLOT tiempoS
ggplot(data = tiempos_fact,
mapping = aes(variable, value, colour = variable)) +
geom_boxplot(outlier.shape=NA, size = 1) +
theme_minimal() +
theme(legend.position = "none") +
xlab("tiempos") + ylab("Minutos") +
ylim(0,84)
# outliers
boxplot(data$tiempo_1, plot=FALSE)$out
# boxplot
ceiling(1 + 3.322 * log10(length(data$tiempo_1)))
# boxplot
ceiling(1 + 3.322 * log10(length(data$tiempo_1)))
ggplot(tiempos, aes(tiempo_1)) +
geom_histogram(bins = 12, color="white", boundary=0) +
xlab("Tiempos [minuto]") + ylab("Frecuencia") +
theme_minimal() +
xlim(0,7.5)
ceiling(1 + 3.322 * log10(length(data$tiempo_1)))
ggplot(tiempos, aes(tiempo_1)) +
geom_histogram(bins = 12, color="white", boundary=0) +
xlab("Tiempos [minuto]") + ylab("Frecuencia") +
theme_minimal()
mean(tiempos$tiempo_1)
mean(data$tiempo_1)
?mean
mean(data$tiempo_1, na.rm = TRUE)
# correción NA #?mean
data_corr <- data %>%
replace_na(mean(data$tiempo_1, na.rm = TRUE))
# correción NA #?mean
data_corr <- data %>%
mutate(replace_na(tiempo_1,mean(data$tiempo_1, na.rm = TRUE)))
View(data_corr)
# correción NA #?mean
data_corr <- data %>%
mutate(tiempo_1 = replace_na(tiempo_1,mean(data$tiempo_1, na.rm = TRUE)))
# boxplot
ggplot(data, aes(data$tiempo_1)) +
geom_histogram(bins = 12, color="white", boundary=0) +
xlab("Tiempos [minuto]") + ylab("Frecuencia") +
theme_minimal() +
xlim(0,7.5)
ggplot(data, aes(tiempo_1)) +
geom_histogram(bins = 12, color="white", boundary=0) +
xlab("Tiempos [minuto]") + ylab("Frecuencia") +
theme_minimal() +
xlim(0,7.5)
ggplot(data, aes(data$tiempo_1)) +
geom_histogram(bins = 12, color="white", boundary=0) +
xlab("Tiempos [minuto]") + ylab("Frecuencia") +
theme_minimal() +
xlim(0,7.5)
# boxplot
ggplot(data_corr, aes(data$tiempo_1)) +
geom_histogram(bins = 12, color="white", boundary=0) +
xlab("Tiempos [minuto]") + ylab("Frecuencia") +
theme_minimal() +
xlim(0,7.5)
ggplot(data, aes(data$tiempo_1)) +
geom_histogram(bins = 12, color="white", boundary=0) +
xlab("Tiempos [minuto]") + ylab("Frecuencia") +
theme_minimal() +
xlim(0,7.5)
# boxplot
ggplot(data_corr, aes(data_corr$tiempo_1)) +
geom_histogram(bins = 12, color="white", boundary=0) +
xlab("Tiempos [minuto]") + ylab("Frecuencia") +
theme_minimal() +
xlim(0,7.5)
ggplot(data_corr, aes(data_corr$tiempo_1)) +
geom_histogram(bins = 12, color="white", boundary=0) +
xlab("Tiempos [minuto]") + ylab("Frecuencia") +
theme_minimal()
ggplot(data, aes(data$tiempo_1)) +
geom_histogram(bins = 12, color="white", boundary=0) +
xlab("Tiempos [minuto]") + ylab("Frecuencia") +
theme_minimal() +
xlim(0,7.5)
# boxplot
ggplot(data_corr, aes(data_corr$tiempo_1)) +
geom_histogram(bins = 12, color="white", boundary=0) +
xlab("Tiempos [minuto]") + ylab("Frecuencia") +
theme_minimal() +
xlim(0,7.5)
mean
# correción NA #?mean
data_corr <- data %>%
mutate(tiempo_1 = replace_na(tiempo_1,median(data$tiempo_1, na.rm = TRUE)))
median(data$tiempo_1, na.rm = TRUE)
# boxplot
ggplot(data_corr, aes(data_corr$tiempo_1)) +
geom_histogram(bins = 12, color="white", boundary=0) +
xlab("Tiempos [minuto]") + ylab("Frecuencia") +
theme_minimal() +
xlim(0,7.5)
ggplot(data, aes(data$tiempo_1)) +
geom_histogram(bins = 12, color="white", boundary=0) +
xlab("Tiempos [minuto]") + ylab("Frecuencia") +
theme_minimal() +
xlim(0,7.5)
ggplot(data, aes(data$tiempo_1)) +
geom_histogram(bins = 12, color="white", boundary=0) +
xlab("Tiempos [minuto]") + ylab("Frecuencia") +
theme_minimal() +
xlim(0,7.5)
# boxplot con correcion de NA
ggplot(data_corr, aes(data_corr$tiempo_1)) +
geom_histogram(bins = 12, color="white", boundary=0) +
xlab("Tiempos [minuto]") + ylab("Frecuencia") +
theme_minimal() +
xlim(0,7.5)
# correción NA #?mean
data_corr <- data %>%
mutate(tiempo_1 = replace_na(tiempo_1,mean(data$tiempo_1, na.rm = TRUE)))
# boxplot con correcion de NA
ggplot(data_corr, aes(data_corr$tiempo_1)) +
geom_histogram(bins = 12, color="white", boundary=0) +
xlab("Tiempos [minuto]") + ylab("Frecuencia") +
theme_minimal() +
xlim(0,7.5)
# correción NA #?mean
data_corr <- data %>%
mutate(tiempo_1 = replace_na(tiempo_1,median(data$tiempo_1, na.rm = TRUE)))
# boxplot con correcion de NA
ggplot(data_corr, aes(data_corr$tiempo_1)) +
geom_histogram(bins = 12, color="white", boundary=0) +
xlab("Tiempos [minuto]") + ylab("Frecuencia") +
theme_minimal() +
xlim(0,7.5)
# outliers
boxplot(data$tiempo_1, plot=FALSE)$out
# outliers
boxplot(data_corr$tiempo_1, plot=FALSE)$out
# correción NA #?mean
data_corr <- data %>%
mutate(tiempo_1 = replace_na(tiempo_1,median(data$tiempo_1, na.rm = TRUE)))
# outliers
boxplot(data_corr$tiempo_1, plot=FALSE)$out
# correción NA #?mean
data_corr <- data %>%
mutate(tiempo_1 = replace_na(tiempo_1,mean(data$tiempo_1, na.rm = TRUE)))
# outliers
boxplot(data_corr$tiempo_1, plot=FALSE)$out
# boxplot sin correcion de NA
ceiling(1 + 3.322 * log10(length(data$tiempo_1)))
# outliers
boxplot(data$tiempo_1, plot=FALSE)$out
ggplot(data, aes(data$tiempo_1)) +
geom_histogram(bins = 12, color="white", boundary=0) +
xlab("Tiempos [minuto]") + ylab("Frecuencia") +
theme_minimal() +
xlim(0,7.5)
mean(data$tiempo_1, na.rm = TRUE)
median(data$tiempo_1, na.rm = TRUE)
# resumen
summary(data_corr$tiempo_1)
sd(data_corr$tiempo_1)
sd(data_corr$tiempo_1)/mean(tiempos$tiempo_1)
sd(data_corr$tiempo_1)/mean(data_corr$tiempo_1)
# boxplot con correcion de NA
ggplot(data_corr, aes(data_corr$tiempo_1)) +
geom_histogram(bins = 12, color="white", boundary=0) +
xlab("Tiempos [minuto]") + ylab("Frecuencia") +
theme_minimal() +
xlim(0,6)
# correción NA #?mean
data_corr <- data %>%
mutate(tiempo_1 = replace_na(tiempo_1,median(data$tiempo_1, na.rm = TRUE)))
# boxplot con correcion de NA
ggplot(data_corr, aes(data_corr$tiempo_1)) +
geom_histogram(bins = 12, color="white", boundary=0) +
xlab("Tiempos [minuto]") + ylab("Frecuencia") +
theme_minimal() +
xlim(0,6)
git add .
